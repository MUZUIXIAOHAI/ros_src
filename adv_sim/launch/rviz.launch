<?xml version="1.0"?>
<launch>

  <arg name="paused" default="true"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="gui" value="$(arg gui)" />
  </include>
  
<!--load the scene model-->
  <node name="spawn_room" pkg="gazebo_ros" type="spawn_model" args="-file /root/catkin_ws/src/adv_sim/my_xacro/model.sdf -sdf -model my_room"
        respawn="false" output="screen" />

  <!-- Load the URDF into the ROS Parameter Server -->
  <arg name="model" default="/root/catkin_ws/src/adv_sim/my_xacro/newrobot.xacro" />
  <param name="robot_description" command="$(find xacro)/xacro.py $(arg model)" />

  <!-- Run a python script to send a service call the gazebo_ros to spawn a URDF robot -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
    args="-urdf -model robot -param robot_description -z 0.05"/> 

  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher" />
 
<!-- Run the map server -->
<node name="map_server" pkg="map_server" type="map_server" args="/root/catkin_ws/src/maps/mymap123.yaml"/>

<!-- start rviz -->

<node pkg="rviz" type="rviz" name="rviz"
    args="-d $(find hector_slam_launch)/rviz_cfg/amcl_demo.rviz"/>
</launch>

